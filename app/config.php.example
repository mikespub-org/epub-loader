<?php

/**
 * EPub Loader config
 *
 * @license    GPL v2 or later (http://www.gnu.org/licenses/gpl.html)
 * @author     Didier Corbière <contact@atoll-digital-library.org>
 * @author     mikespub
 */

$gConfig = [];

/**
 * URL endpoint for your application
 */
$gConfig['endpoint'] = $_SERVER['SCRIPT_NAME'] ?? null;

/**
 * Application name
 */
$gConfig['app_name'] = 'EPub Loader';

/**
 * Admin email
 */
$gConfig['admin_email'] = '';

/**
 * Create Calibre databases ?
 *
 * If true: databases are removed and recreated before loading ebooks
 * If false: append ebooks into databases
 */
$gConfig['create_db'] = true;

/**
 * Specify a cache directory for any Google or Wikidata lookup
 */
$gConfig['cache_dir'] = dirname(__DIR__) . '/cache';

/**
 * Specify a template directory to override the standard templates
 */
//$gConfig['template_dir'] = dirname(__DIR__) . '/templates/twigged/loader';

/**
 * Databases infos
 *
 * For each database:
 *   name: The database name to display
 *   db_path: The path where to create the database
 *   epub_path: The relative path from db_path where to look for the epub files
 */
$gConfig['databases'] = [];
$gConfig['databases'][] = ['name' => 'Some Books', 'db_path' => dirname(__DIR__, 2) . '/seblucas-cops/tests/BaseWithSomeBooks', 'epub_path' => '.'];
$gConfig['databases'][] = ['name' => 'Littérature classique', 'db_path' => '/opt/ebooks/calibre/demo', 'epub_path' => 'epub'];
$gConfig['databases'][] = ['name' => 'Bibliothèque numérique romande', 'db_path' => '/opt/ebooks/calibre/bnr', 'epub_path' => 'epub'];
$gConfig['databases'][] = ['name' => 'La Bibliothèque d\'Ebooks', 'db_path' => '/opt/ebooks/calibre/bibebook', 'epub_path' => 'epub'];
$gConfig['databases'][] = ['name' => 'EPub Tests', 'db_path' => dirname(__DIR__, 2) . '/calibre/library', 'epub_path' => '.'];

/**
 * Define callbacks to update information here
 */
/**
$gConfig['callbacks'] = [
    'setAuthorInfo' => $this->setAuthorInfo(...),
    'setSeriesInfo' => $this->setSeriesInfo(...),
    'setBookInfo' => $this->setBookInfo(...),
];
*/

/**
 * Available action groups
 */
$gConfig['groups'] = [];
$gConfig['groups']['Import'] = [
    'db_load' => 'Create Calibre database with available epub files',
    'csv_import' => 'Import CSV records into new Calibre database',
    'json_import' => 'Import JSON records into new Calibre database',
    'cache_load' => 'Load JSON files from Lookup cache into new Calibre database',
];
$gConfig['groups']['Export'] = [
    'csv_export' => 'Export CSV records with available epub files',
    'csv_dump' => 'Dump CSV records from Calibre database',
    'json_export' => 'Export JSON records with available epub files',
    'json_dump' => 'Dump JSON records from Calibre database',
    // if configured by calling application
    'callback' => 'Export metadata cache info via callbacks',
];
$gConfig['groups']['Lookup'] = [
    'authors' => 'Authors in database',
    'wd_author' => 'WikiData authors',
    'wd_books' => 'WikiData books for author',
    'wd_series' => 'WikiData series for author',
    'gb_books' => 'Google Books for author',
    'ol_author' => 'OpenLibrary authors',
    'ol_books' => 'OpenLibrary books for author',
    'gr_author' => 'GoodReads authors',
    'gr_books' => 'GoodReads books for author',
    'gr_series' => 'GoodReads series',
    'caches' => 'Cache statistics',
];
// internal actions are not shown on the main menu
$gConfig['groups']['Internal'] = [
    'books' => 'Books in database',
    'series' => 'Series in database',
    'test' => 'Test action (not visible)',
    'wd_entity' => 'WikiData entity',
    'gb_volume' => 'Google Books volume',
    'ol_work' => 'OpenLibrary work',
    'resource' => 'Get Calibre Resource',
    //'google_callback' => 'Google OAuth2 Callback',
    //'microsoft_callback' => 'Microsoft OAuth2 Callback',
];
$gConfig['groups']['Extra'] = [
    'booklinks' => 'Book links by identifier',
    'notes' => 'Get Calibre Notes',
    // update metadata in epub files
    //'meta' => 'EPub Metadata App',
    'hello_world' => 'Example: Hello, World - see app/example.php',
    'goodbye' => 'Example: Goodbye - see app/example.php',
];

/**
// External storage mapping - not really useful
$gConfig['groups']['Storage'] = [
    //'storage' => 'External Storage Mapping',
    //'google_drive' => 'Google Drive (Personal) Mapping',
    //'google_test' => 'Google Drive (Personal) Test',
    //'microsoft_onedrive' => 'Microsoft OneDrive (Personal) Mapping',
    'rclone_list' => 'Rclone remote list',
    'rclone_test' => 'Rclone remote test',
];
 */

/**
// External storage authentication
$gConfig['auth'] = [];
$gConfig['auth']['rclone'] = [
    'gdrive' => [
        'config' => dirname(__DIR__) . '.config/rclone/rconf.conf',
        'remote' => 'gdrive',
        'root' => null,
    ],
    'msone' => [
        'config' => dirname(__DIR__) . '.config/rclone/rconf.conf',
        'remote' => 'msdrive',
        'root' => null,
    ],
];
// disabled in actions above
$gConfig['auth']['Google'] = [
    'Drive' => [
        'client_secret' => __DIR__ . '/client_secret.json',
        'root' => null,
    ],
];
// not implemented
$gConfig['auth']['Microsoft'] = [
    'OneDrive' => [
        'client_secret' => '',
    ],
];
 */

return $gConfig;
